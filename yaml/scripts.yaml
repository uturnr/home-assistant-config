# Example serivce call for below script
# service: script.lzw45_pixel_effect
# data:
#   lzw45: light.laundry_room_light_strip
#   effect: static

lzw45_pixel_effect:
  alias: LZW45 Pixel Effect
  description: Sets the pixel effects for the Inovelli LZW45 LED Strip
  mode: restart
  fields:
    service: 
      description:
        (required) The name of the service. 
          OpenZwave (Beta) -> 'ozw.set_config_parameter'
          OpenZwave (1.4) -> 'zwave.set_config_parameter'
          Zwave JS -> 'zwave_js.set_config_parameter'
      example: ozw.set_config_parameter
    lzw45: 
      description: (required) The entity_id for the lzw45 LED Strip.
      example: light.lzw45_light_strip_level
    effect:
      description: (required) The desired effect - static, blink, breath, color-wipe, color-wipe-reverse-inverse, color-wipe-random, random-color, single-dynamic, multi-dynamic, rainbow, rainbow-cycle, scan, dual-scan, fade, running-lights, twinkle, twinkle-random, twinkle-fade, twinkle-fade-random, sparkle, flash-sparkle, hyper-sparkle, strobe, blink-rainbow, chase-white, chase-color, chase-random, chase-rainbow, chase-flash, chase-flash-random, chase-rainbow-white, chase-blackout, chase-blackout-rainbow, color-sweep-random, running-color, running-red-blue, running-random, larson-scanner, comet, fireworks, fireworks-random, merry-christmas, circus-combustus, halloween, aurora
      example: breath
    brightness_pct:
      description: (optional) The brightness percent, 0 - 99.  Defaults to 99 if omitted.
      example: "99"
  variables:
    service: >
      {{ service | default('ozw.set_config_parameter') }}
    node_id: >
      {%- if lzw45 is not defined %}
        light.laundry_room_light_strip
      {%- else %}
        {%- set node_id = state_attr(lzw45, 'node_id') %}
        {{ node_id if node_id else 0 }}
      {%- endif %}
    byte1: >
      {%- set effect = states('input_select.laundry_strip_pixel_effect') %}
      {%- set effects = [
        'static',
        'blink',
        'breath',
        'color-wipe',
        'color-wipe-reverse-inverse',
        'color-wipe-random',
        'random-color',
        'single-dynamic',
        'multi-dynamic',
        'rainbow',
        'rainbow-cycle',
        'scan',
        'dual-scan',
        'fade',
        'running-lights',
        'twinkle',
        'twinkle-random',
        'twinkle-fade',
        'twinkle-fade-random',
        'sparkle',
        'flash-sparkle',
        'hyper-sparkle',
        'strobe',
        'blink-rainbow',
        'chase-white',
        'chase-color',
        'chase-random',
        'chase-rainbow',
        'chase-flash',
        'chase-flash-random',
        'chase-rainbow-white',
        'chase-blackout',
        'chase-blackout-rainbow',
        'color-sweep-random',
        'running-color',
        'running-red-blue',
        'running-random',
        'larson-scanner',
        'comet',
        'fireworks',
        'fireworks-random',
        'merry-christmas',
        'circus-combustus',
        'halloween',
        'aurora'
      ] %}
      {{ effects.index(effect) + 1 if effect in effects else 1 }}
    byte2: >
      {%- set pct = (brightness_pct | default(99)) | int %}
      {%- if 0 <= pct <= 99 %}
        {{ pct }}
      {%- else %}
        99
      {%- endif %}
    bytes: >
      {{ byte2 * 2**8 + byte1 }}
  sequence:
  - condition: template
    value_template: "{{ node_id != 0 }}"
  - service: "{{ service }}"
    data:
      node_id: "{{ node_id }}"
      parameter: 31
      value: "{{ bytes }}"

shuffle_music_on_tv:
  alias: Shuffle Music on TV
  icon: mdi:music-box-multiple
  sequence:
  - service: media_player.turn_on
    entity_id: media_player.living_room_tv
  - service: media_player.select_source
    entity_id: media_player.living_room_tv
    data:
      source: Plex - Stream for Free
  - wait_template: "{{ is_state('media_player.living_room_tv', 'on') }}"
    timeout: '00:00:10'
  - service: plex.scan_for_clients
  - wait_template: "{{ not is_state('media_player.plex_plex_for_roku_living_room_tv', 'unavailable') }}"
    timeout: '00:00:10'
    continue_on_timeout: false
  - service: media_player.play_media
    entity_id: media_player.plex_plex_for_roku_living_room_tv
    data:
      media_content_type: playlist
      media_content_id: '{ "playlist_name": "All Music", "shuffle": "1" }'

spotify_tv:
  alias: Play Spotify on TV
  icon: mdi:music-box-multiple
  sequence:
    - service: media_player.turn_on
      entity_id: media_player.living_room_tv
    - service: media_player.select_source
      entity_id: media_player.living_room_tv
      data:
        source: Spotify Music
    - delay: 00:00:05
    - service: remote.send_command
      entity_id: remote.living_room_tv
      data: 
        command: select
    - delay: 00:00:05
    - service: remote.send_command
      entity_id: remote.living_room_tv
      data: 
        command: down
    - delay: 00:00:05
    - service: remote.send_command
      entity_id: remote.living_room_tv
      data: 
        command: select
    - delay: 00:00:05
    - service: remote.send_command
      entity_id: remote.living_room_tv
      data: 
        command: select
